// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddAdmin extends ethereum.Event {
  get params(): AddAdmin__Params {
    return new AddAdmin__Params(this);
  }
}

export class AddAdmin__Params {
  _event: AddAdmin;

  constructor(event: AddAdmin) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BanUser extends ethereum.Event {
  get params(): BanUser__Params {
    return new BanUser__Params(this);
  }
}

export class BanUser__Params {
  _event: BanUser;

  constructor(event: BanUser) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Chat extends ethereum.Event {
  get params(): Chat__Params {
    return new Chat__Params(this);
  }
}

export class Chat__Params {
  _event: Chat;

  constructor(event: Chat) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _channelId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _message(): string {
    return this._event.parameters[2].value.toString();
  }

  get _timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CreateChannel extends ethereum.Event {
  get params(): CreateChannel__Params {
    return new CreateChannel__Params(this);
  }
}

export class CreateChannel__Params {
  _event: CreateChannel;

  constructor(event: CreateChannel) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get isGated(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get _contract(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get chainId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get minHolding(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get chatRestricted(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get admins(): Array<Address> {
    return this._event.parameters[8].value.toAddressArray();
  }

  get banned(): Array<Address> {
    return this._event.parameters[9].value.toAddressArray();
  }

  get owner(): Address {
    return this._event.parameters[10].value.toAddress();
  }
}

export class JoinChannel extends ethereum.Event {
  get params(): JoinChannel__Params {
    return new JoinChannel__Params(this);
  }
}

export class JoinChannel__Params {
  _event: JoinChannel;

  constructor(event: JoinChannel) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LeaveChannel extends ethereum.Event {
  get params(): LeaveChannel__Params {
    return new LeaveChannel__Params(this);
  }
}

export class LeaveChannel__Params {
  _event: LeaveChannel;

  constructor(event: LeaveChannel) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemoveAdmin extends ethereum.Event {
  get params(): RemoveAdmin__Params {
    return new RemoveAdmin__Params(this);
  }
}

export class RemoveAdmin__Params {
  _event: RemoveAdmin;

  constructor(event: RemoveAdmin) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UnBanUser extends ethereum.Event {
  get params(): UnBanUser__Params {
    return new UnBanUser__Params(this);
  }
}

export class UnBanUser__Params {
  _event: UnBanUser;

  constructor(event: UnBanUser) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ChannelContract__channelMapResult {
  value0: boolean;
  value1: string;
  value2: string;
  value3: boolean;
  value4: Address;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;
  value8: Address;

  constructor(
    value0: boolean,
    value1: string,
    value2: string,
    value3: boolean,
    value4: Address,
    value5: BigInt,
    value6: BigInt,
    value7: boolean,
    value8: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    return map;
  }

  getExists(): boolean {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getDescription(): string {
    return this.value2;
  }

  getIsGated(): boolean {
    return this.value3;
  }

  get_contract(): Address {
    return this.value4;
  }

  getChainId(): BigInt {
    return this.value5;
  }

  getMinHolding(): BigInt {
    return this.value6;
  }

  getIsRestricted(): boolean {
    return this.value7;
  }

  getOwner(): Address {
    return this.value8;
  }
}

export class ChannelContract__getChannelResultChannelStruct extends ethereum.Tuple {
  get exists(): boolean {
    return this[0].toBoolean();
  }

  get name(): string {
    return this[1].toString();
  }

  get description(): string {
    return this[2].toString();
  }

  get isGated(): boolean {
    return this[3].toBoolean();
  }

  get _contract(): Address {
    return this[4].toAddress();
  }

  get chainId(): BigInt {
    return this[5].toBigInt();
  }

  get minHolding(): BigInt {
    return this[6].toBigInt();
  }

  get isRestricted(): boolean {
    return this[7].toBoolean();
  }

  get admins(): Array<Address> {
    return this[8].toAddressArray();
  }

  get banned(): Array<Address> {
    return this[9].toAddressArray();
  }

  get owner(): Address {
    return this[10].toAddress();
  }
}

export class ChannelContract extends ethereum.SmartContract {
  static bind(address: Address): ChannelContract {
    return new ChannelContract("ChannelContract", address);
  }

  approvedContracts(param0: Address): boolean {
    let result = super.call(
      "approvedContracts",
      "approvedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_approvedContracts(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "approvedContracts",
      "approvedContracts(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  channelMap(param0: BigInt): ChannelContract__channelMapResult {
    let result = super.call(
      "channelMap",
      "channelMap(uint256):(bool,string,string,bool,address,uint256,uint256,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ChannelContract__channelMapResult(
      result[0].toBoolean(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBoolean(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean(),
      result[8].toAddress()
    );
  }

  try_channelMap(
    param0: BigInt
  ): ethereum.CallResult<ChannelContract__channelMapResult> {
    let result = super.tryCall(
      "channelMap",
      "channelMap(uint256):(bool,string,string,bool,address,uint256,uint256,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ChannelContract__channelMapResult(
        value[0].toBoolean(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBoolean(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean(),
        value[8].toAddress()
      )
    );
  }

  getChannel(
    _channelId: BigInt
  ): ChannelContract__getChannelResultChannelStruct {
    let result = super.call(
      "getChannel",
      "getChannel(uint256):((bool,string,string,bool,address,uint256,uint256,bool,address[],address[],address))",
      [ethereum.Value.fromUnsignedBigInt(_channelId)]
    );

    return changetype<ChannelContract__getChannelResultChannelStruct>(
      result[0].toTuple()
    );
  }

  try_getChannel(
    _channelId: BigInt
  ): ethereum.CallResult<ChannelContract__getChannelResultChannelStruct> {
    let result = super.tryCall(
      "getChannel",
      "getChannel(uint256):((bool,string,string,bool,address,uint256,uint256,bool,address[],address[],address))",
      [ethereum.Value.fromUnsignedBigInt(_channelId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ChannelContract__getChannelResultChannelStruct>(
        value[0].toTuple()
      )
    );
  }

  isAdmin(_channelId: BigInt, _user: Address): boolean {
    let result = super.call("isAdmin", "isAdmin(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_channelId),
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_isAdmin(
    _channelId: BigInt,
    _user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_channelId),
      ethereum.Value.fromAddress(_user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isBanned(_channelId: BigInt, _user: Address): boolean {
    let result = super.call("isBanned", "isBanned(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_channelId),
      ethereum.Value.fromAddress(_user)
    ]);

    return result[0].toBoolean();
  }

  try_isBanned(
    _channelId: BigInt,
    _user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("isBanned", "isBanned(uint256,address):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_channelId),
      ethereum.Value.fromAddress(_user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  joinedChannel(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "joinedChannel",
      "joinedChannel(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_joinedChannel(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "joinedChannel",
      "joinedChannel(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddAdminCall extends ethereum.Call {
  get inputs(): AddAdminCall__Inputs {
    return new AddAdminCall__Inputs(this);
  }

  get outputs(): AddAdminCall__Outputs {
    return new AddAdminCall__Outputs(this);
  }
}

export class AddAdminCall__Inputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddAdminCall__Outputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }
}

export class BanUserCall extends ethereum.Call {
  get inputs(): BanUserCall__Inputs {
    return new BanUserCall__Inputs(this);
  }

  get outputs(): BanUserCall__Outputs {
    return new BanUserCall__Outputs(this);
  }
}

export class BanUserCall__Inputs {
  _call: BanUserCall;

  constructor(call: BanUserCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class BanUserCall__Outputs {
  _call: BanUserCall;

  constructor(call: BanUserCall) {
    this._call = call;
  }
}

export class ChatCall extends ethereum.Call {
  get inputs(): ChatCall__Inputs {
    return new ChatCall__Inputs(this);
  }

  get outputs(): ChatCall__Outputs {
    return new ChatCall__Outputs(this);
  }
}

export class ChatCall__Inputs {
  _call: ChatCall;

  constructor(call: ChatCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _message(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChatCall__Outputs {
  _call: ChatCall;

  constructor(call: ChatCall) {
    this._call = call;
  }
}

export class CreateChannelCall extends ethereum.Call {
  get inputs(): CreateChannelCall__Inputs {
    return new CreateChannelCall__Inputs(this);
  }

  get outputs(): CreateChannelCall__Outputs {
    return new CreateChannelCall__Outputs(this);
  }
}

export class CreateChannelCall__Inputs {
  _call: CreateChannelCall;

  constructor(call: CreateChannelCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _isGated(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get _contract(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _chainId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _minHolding(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _isRestricted(): boolean {
    return this._call.inputValues[6].value.toBoolean();
  }

  get _admins(): Array<Address> {
    return this._call.inputValues[7].value.toAddressArray();
  }

  get _banned(): Array<Address> {
    return this._call.inputValues[8].value.toAddressArray();
  }
}

export class CreateChannelCall__Outputs {
  _call: CreateChannelCall;

  constructor(call: CreateChannelCall) {
    this._call = call;
  }
}

export class CrossChainGatedJoinCall extends ethereum.Call {
  get inputs(): CrossChainGatedJoinCall__Inputs {
    return new CrossChainGatedJoinCall__Inputs(this);
  }

  get outputs(): CrossChainGatedJoinCall__Outputs {
    return new CrossChainGatedJoinCall__Outputs(this);
  }
}

export class CrossChainGatedJoinCall__Inputs {
  _call: CrossChainGatedJoinCall;

  constructor(call: CrossChainGatedJoinCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CrossChainGatedJoinCall__Outputs {
  _call: CrossChainGatedJoinCall;

  constructor(call: CrossChainGatedJoinCall) {
    this._call = call;
  }
}

export class JoinChannelCall extends ethereum.Call {
  get inputs(): JoinChannelCall__Inputs {
    return new JoinChannelCall__Inputs(this);
  }

  get outputs(): JoinChannelCall__Outputs {
    return new JoinChannelCall__Outputs(this);
  }
}

export class JoinChannelCall__Inputs {
  _call: JoinChannelCall;

  constructor(call: JoinChannelCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class JoinChannelCall__Outputs {
  _call: JoinChannelCall;

  constructor(call: JoinChannelCall) {
    this._call = call;
  }
}

export class JoinGatedChannelCall extends ethereum.Call {
  get inputs(): JoinGatedChannelCall__Inputs {
    return new JoinGatedChannelCall__Inputs(this);
  }

  get outputs(): JoinGatedChannelCall__Outputs {
    return new JoinGatedChannelCall__Outputs(this);
  }
}

export class JoinGatedChannelCall__Inputs {
  _call: JoinGatedChannelCall;

  constructor(call: JoinGatedChannelCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class JoinGatedChannelCall__Outputs {
  _call: JoinGatedChannelCall;

  constructor(call: JoinGatedChannelCall) {
    this._call = call;
  }
}

export class LeaveChannelCall extends ethereum.Call {
  get inputs(): LeaveChannelCall__Inputs {
    return new LeaveChannelCall__Inputs(this);
  }

  get outputs(): LeaveChannelCall__Outputs {
    return new LeaveChannelCall__Outputs(this);
  }
}

export class LeaveChannelCall__Inputs {
  _call: LeaveChannelCall;

  constructor(call: LeaveChannelCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LeaveChannelCall__Outputs {
  _call: LeaveChannelCall;

  constructor(call: LeaveChannelCall) {
    this._call = call;
  }
}

export class RemoveAdminCall extends ethereum.Call {
  get inputs(): RemoveAdminCall__Inputs {
    return new RemoveAdminCall__Inputs(this);
  }

  get outputs(): RemoveAdminCall__Outputs {
    return new RemoveAdminCall__Outputs(this);
  }
}

export class RemoveAdminCall__Inputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveAdminCall__Outputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }
}

export class SetApprovedContractCall extends ethereum.Call {
  get inputs(): SetApprovedContractCall__Inputs {
    return new SetApprovedContractCall__Inputs(this);
  }

  get outputs(): SetApprovedContractCall__Outputs {
    return new SetApprovedContractCall__Outputs(this);
  }
}

export class SetApprovedContractCall__Inputs {
  _call: SetApprovedContractCall;

  constructor(call: SetApprovedContractCall) {
    this._call = call;
  }

  get _contract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetApprovedContractCall__Outputs {
  _call: SetApprovedContractCall;

  constructor(call: SetApprovedContractCall) {
    this._call = call;
  }
}

export class UnBanUserCall extends ethereum.Call {
  get inputs(): UnBanUserCall__Inputs {
    return new UnBanUserCall__Inputs(this);
  }

  get outputs(): UnBanUserCall__Outputs {
    return new UnBanUserCall__Outputs(this);
  }
}

export class UnBanUserCall__Inputs {
  _call: UnBanUserCall;

  constructor(call: UnBanUserCall) {
    this._call = call;
  }

  get _channelId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UnBanUserCall__Outputs {
  _call: UnBanUserCall;

  constructor(call: UnBanUserCall) {
    this._call = call;
  }
}
